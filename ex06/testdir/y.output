Grammar

    0 $accept: list $end

    1 list: '[' body ']'

    2 body: %empty
    3     | body2

    4 body2: elem

    5 $@1: %empty

    6 body2: body2 ',' $@1 elem

    7 elem: STR
    8     | STR '!' expr

    9 expr: expr '+' expr
   10     | expr '*' expr
   11     | NUM
   12     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 8
'(' (40) 12
')' (41) 12
'*' (42) 10
'+' (43) 9
',' (44) 6
'[' (91) 1
']' (93) 1
error (256)
STR (258) 7 8
NUM (259) 11


Nonterminals, with rules where they appear

$accept (13)
    on left: 0
list (14)
    on left: 1, on right: 0
body (15)
    on left: 2 3, on right: 1
body2 (16)
    on left: 4 6, on right: 3 6
$@1 (17)
    on left: 5, on right: 6
elem (18)
    on left: 7 8, on right: 4 6
expr (19)
    on left: 9 10 11 12, on right: 8 9 10 12


State 0

    0 $accept: . list $end

    '['  shift, and go to state 1

    list  go to state 2


State 1

    1 list: '[' . body ']'

    STR  shift, and go to state 3

    $default  reduce using rule 2 (body)

    body   go to state 4
    body2  go to state 5
    elem   go to state 6


State 2

    0 $accept: list . $end

    $end  shift, and go to state 7


State 3

    7 elem: STR .
    8     | STR . '!' expr

    '!'  shift, and go to state 8

    $default  reduce using rule 7 (elem)


State 4

    1 list: '[' body . ']'

    ']'  shift, and go to state 9


State 5

    3 body: body2 .
    6 body2: body2 . ',' $@1 elem

    ','  shift, and go to state 10

    $default  reduce using rule 3 (body)


State 6

    4 body2: elem .

    $default  reduce using rule 4 (body2)


State 7

    0 $accept: list $end .

    $default  accept


State 8

    8 elem: STR '!' . expr

    NUM  shift, and go to state 11
    '('  shift, and go to state 12

    expr  go to state 13


State 9

    1 list: '[' body ']' .

    $default  reduce using rule 1 (list)


State 10

    6 body2: body2 ',' . $@1 elem

    $default  reduce using rule 5 ($@1)

    $@1  go to state 14


State 11

   11 expr: NUM .

    $default  reduce using rule 11 (expr)


State 12

   12 expr: '(' . expr ')'

    NUM  shift, and go to state 11
    '('  shift, and go to state 12

    expr  go to state 15


State 13

    8 elem: STR '!' expr .
    9 expr: expr . '+' expr
   10     | expr . '*' expr

    '+'  shift, and go to state 16
    '*'  shift, and go to state 17

    $default  reduce using rule 8 (elem)


State 14

    6 body2: body2 ',' $@1 . elem

    STR  shift, and go to state 3

    elem  go to state 18


State 15

    9 expr: expr . '+' expr
   10     | expr . '*' expr
   12     | '(' expr . ')'

    '+'  shift, and go to state 16
    '*'  shift, and go to state 17
    ')'  shift, and go to state 19


State 16

    9 expr: expr '+' . expr

    NUM  shift, and go to state 11
    '('  shift, and go to state 12

    expr  go to state 20


State 17

   10 expr: expr '*' . expr

    NUM  shift, and go to state 11
    '('  shift, and go to state 12

    expr  go to state 21


State 18

    6 body2: body2 ',' $@1 elem .

    $default  reduce using rule 6 (body2)


State 19

   12 expr: '(' expr ')' .

    $default  reduce using rule 12 (expr)


State 20

    9 expr: expr . '+' expr
    9     | expr '+' expr .
   10     | expr . '*' expr

    '*'  shift, and go to state 17

    $default  reduce using rule 9 (expr)


State 21

    9 expr: expr . '+' expr
   10     | expr . '*' expr
   10     | expr '*' expr .

    $default  reduce using rule 10 (expr)
